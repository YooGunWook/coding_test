"""
n개의 정수로 이루어진 임의의 수열이 주어진다.
우리는 이 중 연속된 몇 개의 수를 선택해서 구할 수 있는 합 중 가장 큰 합을 구하려고 한다.
단, 수는 한 개 이상 선택해야 한다. 또, 수열에서 수를 하나 제거할 수 있다. (제거하지 않아도 된다)
예를 들어서 10, -4, 3, 1, 5, 6, -35, 12, 21, -1 이라는 수열이 주어졌다고 하자. 
여기서 수를 제거하지 않았을 때의 정답은 12+21인 33이 정답이 된다.
만약, -35를 제거한다면, 수열은 10, -4, 3, 1, 5, 6, 12, 21, -1이 되고, 여기서 정답은 10-4+3+1+5+6+12+21인 54가 된다.
"""
n = int(input())
num = list(map(int, input().split(" ")))


def solution(n, num):
    # dp 기반 풀이
    # 0은 지우지 않는 케이스, 1은 지우는 케이스
    dp = [[0] * n for _ in range(2)]
    dp[0][0] = num[0]  # 첫번째 값은 무조건 들어감

    if n > 1:  # 1보다 클 때
        ans = -1e9
        for i in range(1, n):  # 1부터 탐색
            dp[0][i] = max(dp[0][i - 1] + num[i], num[i])  # 지우지 않을 때
            dp[1][i] = max(dp[0][i - 1], dp[1][i - 1] + num[i])  # 지울 때, i번째 원소를 지웠을 때와 이전 원소를 지웠을 때
            ans = max(ans, dp[0][i], dp[1][i])
    else:
        ans = num[0]
    return ans


print(solution(n, num))
