"""
DP 문제
3×N 크기의 벽을 2×1, 1×2 크기의 타일로 채우는 경우의 수를 구해보자.
"""

n = int(input())


def solution(n):
    if n % 2 == 1:  # 홀수일 때는 타일을 채울 수 없음
        return 0
    dp = [0 for _ in range(31)]  # 30개의 케이스를 모두 넣어둔다.
    dp[2] = 3  # 2개일 때는 3개를 채울 수 있다.
    for i in range(4, n + 1, 2):
        # 첫번째 식: n에 대해서 n-2 까지의 dp 값에 가로길이 2짜리 타일로 만들 수 잇는 3가지 경우의 수를 곱한 경우
        # 두번째 식: n에 대해서 0 ~ n-4 까지의 타일 뒤에 자신을 붙혀서 만들 수 있는 경우를 곱한 경우
        dp[i] = dp[i - 2] * 3 + sum(dp[: i - 2]) * 2 + 2
    return dp[n]


print(solution(n))

